// runExpenseMigration.js
const sequelize = require('./config/database');

const runExpenseMigration = async () => {
  try {
    console.log('๐ ุจุฏุก ุฅูุดุงุก ุฌุฏูู ุงููุตุงุฑูู...');
    
    // ุฅูุดุงุก ุฌุฏูู ุงููุตุงุฑูู
    await sequelize.query(`
      CREATE TABLE IF NOT EXISTS Expenses (
        id INT AUTO_INCREMENT PRIMARY KEY,
        unitId INT NOT NULL,
        expenseType ENUM(
          'maintenance', 
          'utilities', 
          'insurance', 
          'cleaning', 
          'security', 
          'management', 
          'repairs', 
          'other'
        ) NOT NULL COMMENT 'ููุน ุงููุตุฑูู',
        amount DECIMAL(10, 2) NOT NULL COMMENT 'ูููุฉ ุงููุตุฑูู',
        expenseDate DATE NOT NULL COMMENT 'ุชุงุฑูุฎ ุงููุตุฑูู',
        notes TEXT COMMENT 'ููุงุญุธุงุช',
        createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
        updatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        CONSTRAINT fk_expense_unit 
          FOREIGN KEY (unitId) REFERENCES RealEstateUnits(id) 
          ON DELETE CASCADE ON UPDATE CASCADE
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
    `);

    console.log('โ ุชู ุฅูุดุงุก ุฌุฏูู ุงููุตุงุฑูู ุจูุฌุงุญ');

    // ุฅุถุงูุฉ ุงูููุงุฑุณ ููุฃุฏุงุก
    console.log('๐ ุฅุถุงูุฉ ุงูููุงุฑุณ...');
    
    await sequelize.query(`
      CREATE INDEX IF NOT EXISTS expenses_unit_id_index ON Expenses(unitId);
    `);
    
    await sequelize.query(`
      CREATE INDEX IF NOT EXISTS expenses_expense_date_index ON Expenses(expenseDate);
    `);
    
    await sequelize.query(`
      CREATE INDEX IF NOT EXISTS expenses_expense_type_index ON Expenses(expenseType);
    `);

    console.log('โ ุชู ุฅุถุงูุฉ ุฌููุน ุงูููุงุฑุณ ุจูุฌุงุญ');

    // ุงูุชุญูู ูู ุฅูุดุงุก ุงูุฌุฏูู
    const [results] = await sequelize.query(`
      SELECT COUNT(*) as tableExists 
      FROM information_schema.tables 
      WHERE table_schema = DATABASE() 
      AND table_name = 'Expenses'
    `);

    if (results[0].tableExists > 0) {
      console.log('๐ ุชู ุฅูุดุงุก ุฌุฏูู ุงููุตุงุฑูู ุจูุฌุงุญ ููู ุฌุงูุฒ ููุงุณุชุฎุฏุงู!');
      
      // ุนุฑุถ ูููู ุงูุฌุฏูู
      const [tableStructure] = await sequelize.query('DESCRIBE Expenses');
      console.log('๐ ูููู ุฌุฏูู ุงููุตุงุฑูู:');
      console.table(tableStructure);
      
    } else {
      console.log('โ ูุดู ูู ุฅูุดุงุก ุงูุฌุฏูู');
    }

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุฌุฏูู ุงููุตุงุฑูู:', error.message);
    
    // ุฅุฐุง ูุงู ุงูุฎุทุฃ ูุชุนูู ุจุงูุฌุฏูู ุงููุฑุฌุนู
    if (error.message.includes('RealEstateUnits')) {
      console.log('๐ก ุชุฃูุฏ ูู ูุฌูุฏ ุฌุฏูู RealEstateUnits ุฃููุงู');
    }
  } finally {
    await sequelize.close();
    console.log('๐ ุชู ุฅุบูุงู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช');
  }
};

// ุชุดุบูู Migration
runExpenseMigration();